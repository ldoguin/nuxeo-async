<div style="float:right">

<div id="connectedUsers">
Connected User: 
</div>

<div>
<div id="send">
  <form onsubmit="return false;">
    <input type="text" id="sendMessage" value="Hello, World!"/>
    <input type="button" id="sendButton" value="Send message"/>
  </form>
</div>

<br />

<div id="receive" >
  <div id="received" >
  </div>
</div>

</div>

<script src="//cdn.sockjs.org/sockjs-0.2.1.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/vertx/1.2.3/vertxbus.min.js"></script>

<script>

  var eb = null;
  var chanAddress = '/chated/#{currentDocument.id}';
  var firstName = '#{currentNuxeoPrincipal.firstName}';
  var lastName = '#{currentNuxeoPrincipal.lastName}';
  var userId = '#{currentNuxeoPrincipal.name}';
  var userToken = 'token';
  var chatedEndpoint = '#{chatedEndpoint}';
  var users = new Array();

  Array.prototype.pushUnique = function (value) {
    var arrVal = this;
    if (jQuery.inArray(value, arrVal) === -1) {
     arrVal.push(value);
    }
    return arrVal;
  }

  function username() {
    if (firstName) {
      return firstName + ' ' + lastName;
    } else {
      return userId;
    }
  }

  function addUser(userName) {
      var $div = jQuery("&lt;div&gt;").attr("class","user");
      var $image = jQuery("&lt;span&gt;").appendTo($div);
      var $text = jQuery("&lt;span&gt;").text(userName).appendTo($div);
      $div.appendTo("#connectedUsers");
      users.pushUnique(userName);
  }

  function publish(address, message) {
    if (eb) {
      var json = {text: message, user:userId, token:userToken};
      eb.publish(address, json);
    }
  }

  function subscribe(address) {
    if (eb) {
      eb.registerHandler(address, function(msg, replyTo) {
        if (msg.text) {
          if (msg.text.indexOf("{") == 0) {
            var obj = jQuery.parseJSON(msg.text);
            if (obj.user) {
              if (jQuery.inArray(obj.user.username, users) == -1) {
                addUser(obj.user.username);
                publish(chanAddress, '{"user":{"username":"' + username() + '"}}');
              }
            }
          } else {
            jQuery('#received').prepend(msg.text + '&lt;br&gt;');
          }
        } else if (msg.event) {
          jQuery('#received').prepend(msg.event + '&lt;br&gt;');        
        }
      });
      addUser(username());
      publish(chanAddress, '{"user":{"username":"' + username() + '"}}');
    }
  }

  function closeConn() {
    if (eb) {
      eb.close();
    }
  }

  function openConn() {
    if (!eb) {
      eb = new vertx.EventBus(chatedEndpoint);

      eb.onopen = function() {
        jQuery("#status_info").text("Connected");
        subscribe(chanAddress);
      };

      eb.onclose = function() {
        jQuery("#status_info").text("Not connected");
        eb = null;
      };
    }
  }

  jQuery(document).ready(function() {
    jQuery(window).unload(function() {
       publish(chanAddress, userId + " left the page");
    });

    jQuery('#sendButton').click(function() {
      publish(chanAddress, jQuery('#sendMessage').val());
    });
  
    openConn();

  });

</script>

</div>